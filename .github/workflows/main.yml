# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on: [push, pull_request, workflow_dispatch]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: seanmiddleditch/gha-setup-ninja@master
      - uses: subosito/flutter-action@v1
        with:
          channel: beta
      - name: Setup
        run: |
          flutter config --enable-linux-desktop
          flutter pub get
      - name: Test
        run: flutter test
      - name: Build
        run: flutter build linux
      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux
          path: build/linux/build/Products/Release/hds_overlay
  
  build_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: beta
      - name: Setup
        run: |
          flutter config --enable-macos-desktop
          flutter pub get
      - name: Test
        run: flutter test
      - name: Build
        run: flutter build macos
      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: macos
          path: build/macos/build/Products/Release/hds_overlay
          
  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: beta
      - name: Setup
        run: |
          flutter config --enable-windows-desktop
          flutter pub get
      - name: Test
        run: flutter test
      - name: Build
        run: flutter build windows
      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: macos
          path: build/windows/build/Products/Release/hds_overlay.exe
          
  deploy:
    runs-on: ubuntu-latest
    needs: [build_linux, build_macos, build_windows]
    if: success() && contains(github.ref, 'refs/tags/')
    
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
          
      - name: Create release draft
        uses: ncipollo/release-action@v1
        with:
            artifacts: "windows/*,macos/*,linux/*"
            draft: true
            token: ${{ secrets.GITHUB_TOKEN }}
